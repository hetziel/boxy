/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/boxy.js":
/*!************************!*\
  !*** ./src/js/boxy.js ***!
  \************************/
/***/ (() => {

eval("const boxy = \"0.3.2.1006\";\r\n\r\n// Boot\r\nwindow.addEventListener(\"load\", (event) => {\r\n  console.log(\"Boxy \"+boxy+\" is mounted\");\r\n  boxyVersion(true);\r\n  bgImg();\r\n  bEvents();\r\n});\r\n\r\nlet hash2 = \"\";\r\nlet _switch = false;\r\n\r\n// Observador de cambios\r\nconst targetNode = document.body;\r\nconst config = { attributes: true, childList: true, subtree: true };\r\n\r\nconst callback = (mutationList, observer) => {\r\n  setColor();\r\n};\r\n\r\nconst observer = new MutationObserver(callback);\r\nobserver.observe(targetNode, config);\r\n// Fin Observador de cambios\r\n\r\n//Funciones\r\n\r\n// Muestra la versiÃ³n de Boxy\r\nfunction boxyVersion(show = false) {\r\n  if (show) {\r\n    document.body.setAttribute(\"version\", boxy);\r\n  } else {\r\n    document.body.removeAttribute(\"version\");\r\n  }\r\n}\r\n\r\n//[bg-img]\r\nfunction bgImg() {\r\n  document.querySelectorAll(\"[bg-img]\").forEach(function (i) {\r\n    if (attrValue = i.getAttribute(\"bg-img\")) {\r\n      i.style.backgroundImage = \"url(\" + attrValue + \")\";\r\n      i.setAttribute(\"bg-img\", \"\");\r\n    }\r\n  });\r\n}\r\n// set Color\r\nfunction setColor(variable, color) {\r\n  if (variable && color) {\r\n    changeColor(\"color\", variable, color, true);\r\n    changeColor(\"bg\", variable, color, true);\r\n    changeColor(\"tx\", variable, color, true);\r\n  } else {\r\n    let color = [];\r\n    color[\"primary\"] = \"blue\";\r\n    color[\"secondary\"] = \"gray\";\r\n    color[\"success\"] = \"green\";\r\n    color[\"warning\"] = \"yellow\";\r\n    color[\"danger\"] = \"red\";\r\n    color[\"info\"] = \"light-blue\";\r\n    color[\"light\"] = \"white\";\r\n    color[\"dark\"] = \"dark-gray\";\r\n\r\n    for (let i in color) {\r\n      changeColor(\"color\", i, color[i]);\r\n      changeColor(\"bg\", i, color[i]);\r\n      changeColor(\"tx\", i, color[i]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction changeColor(attr, variable, color, origin) {\r\n  document.querySelectorAll(\"[\" + attr + \"]\").forEach(function (i) {\r\n    if (origin) {\r\n      if (i.attributes[attr]) {\r\n        if (i.attributes[attr].value == variable) {\r\n          i.removeAttribute(attr);\r\n          i.setAttribute(attr, color);\r\n        }\r\n      }\r\n    } else {\r\n      if (i.attributes[attr].value == variable) {\r\n        i.setAttribute(\"rs\", i.attributes[attr].value);\r\n        i.setAttribute(attr, color);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n\r\nconst getHash = () => {\r\n  return location.hash.slice(1).toLocaleLowerCase().split('/')[1] || '/';\r\n}\r\n\r\n// Eventos de Boxy\r\nfunction bEvents() {\r\n  document.body.addEventListener(\"click\", function (e) {\r\n    // side\r\n    let side = e.target.closest(\"[mobile-side]\");\r\n    let other = document.querySelector(\".b-side[opened]\");\r\n    if (side) {\r\n      if (side.parentNode.hasAttribute(\"opened\")) {\r\n        side.parentNode.removeAttribute(\"opened\");\r\n      } else {\r\n        if (other) {\r\n          other.removeAttribute(\"opened\");\r\n        }\r\n        side.parentNode.setAttribute(\"opened\", \"\");\r\n      }\r\n    }\r\n    //close side\r\n    let clean = !e.target.closest(\".b-side[opened]\");\r\n    if (clean) {\r\n      if (other) {\r\n        other.removeAttribute(\"opened\");\r\n      }\r\n    }\r\n    // head\r\n\r\n    bHeadSide = e.target.closest(\"[open-nav]\");\r\n    if (bHeadSide) {\r\n        if (hash2 != getHash()){\r\n          _switch = false;\r\n        }\r\n    }\r\n    if (!_switch) {\r\n      if (bHeadSide) {\r\n        bHeadSide.parentNode\r\n          .querySelector(\"[bx-content]\")\r\n          .setAttribute(\"opened\", \"\");\r\n        _switch = true;\r\n        hash2 = getHash();\r\n      }\r\n    } else {\r\n      \r\n      let closeHead = !e.target.closest(\".b-header [bx-content][opened]\");\r\n      if (closeHead) {\r\n        let opened = document.querySelector(\".b-header [bx-content][opened]\");\r\n        if (opened) {\r\n          opened.removeAttribute(\"opened\");\r\n          _switch = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    // b-menu\r\n    if ((title = e.target.closest(\"[bx-title]\"))) {\r\n      let autoclose = title.parentNode.hasAttribute(\"autoclose\");\r\n      let titles = title.parentNode.querySelectorAll(\"[bx-title]\");\r\n      let brothers = title.parentNode.querySelectorAll(\"[bx-content]\");\r\n      let next = title.nextElementSibling;\r\n\r\n      if (autoclose && titles && brothers) {\r\n        titles.forEach((i) => {\r\n          if (i != title) {\r\n            i.removeAttribute(\"active\");\r\n          }\r\n        });\r\n        brothers.forEach((i) => {\r\n          if (i != next) {\r\n            i.style.maxHeight = null;\r\n          }\r\n        });\r\n      }\r\n\r\n      title.setAttribute(\"active\", \"\");\r\n      if (next.hasAttribute(\"bx-content\")) {\r\n        if (next.style.maxHeight) {\r\n          next.style.maxHeight = null;\r\n          title.removeAttribute(\"active\");\r\n        } else {\r\n          next.style.maxHeight = next.scrollHeight + \"px\";\r\n        }\r\n      }\r\n    }\r\n    // test SPA\r\n    if(bGo = e.target.closest(\"[b-go]\")){\r\n      window.location.href = \"#/\"+bGo.getAttribute(\"b-go\");\r\n    }\r\n  });\r\n}\n\n//# sourceURL=webpack://boxy-webpack/./src/js/boxy.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/boxy.js"]();
/******/ 	
/******/ })()
;